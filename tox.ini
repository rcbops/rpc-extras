[tox]
minversion = 2.0
skipsdist = True
envlist = bindep,docs,linters
sitepackages = True


[testenv]
usedevelop = True
install_command =
    pip install -c{env:UPPER_CONSTRAINTS_FILE} {opts} {packages} --isolated
deps =
    -r{toxinidir}/test-requirements.txt
commands =
    /usr/bin/find . -type f -name "*.pyc" -delete
passenv = *
whitelist_externals =
    bash
setenv =
    BINDEP_FILE={toxinidir}/bindep.txt
    PYTHONUNBUFFERED=1
    TEST_IDEMPOTENCE=false
    VIRTUAL_ENV={envdir}
    WORKING_DIR={toxinidir}
    # bug#1682108
    PYTHONPATH={envsitepackagesdir}
    # RPC product release name
    RPC_PRODUCT_RELEASE={env:RPC_PRODUCT_RELEASE:pike}
    ### OSA specific call back files
    # Set the checkout to any supported tag, branch, or sha.
    # NOTE(cloudnull): This should be set to "master" as soon the gate is capable of
    #                  setting this option.
    OSA_RELEASE={env:OSA_RELEASE:stable/pike}
    OSA_TEST_RELEASE=stable/pike
    UPPER_CONSTRAINTS_FILE=https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h={env:OSA_TEST_RELEASE:master}
    OSA_TEST_DEPS=https://git.openstack.org/cgit/openstack/openstack-ansible-tests/plain/test-ansible-deps.txt?h={env:OSA_TEST_RELEASE:master}
    OSA_ROLE_REQUIREMENTS=https://git.openstack.org/cgit/openstack/openstack-ansible/plain/ansible-role-requirements.yml?h={env:OSA_RELEASE:master}
basepython = python2.7

[testenv:bindep]
# Deps is empty on purpose
deps =
commands =
    bash -c "{toxinidir}/run-bindep.sh"


[testenv:docs]
commands =
    bash -c "rm -rf doc/build"
    doc8 doc
    python setup.py build_sphinx


[doc8]
# Settings for doc8:
extensions = .rst


[testenv:releasenotes]
commands =
    sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html


# environment used by the -infra templated docs job
[testenv:venv]
commands =
    {posargs}


[testenv:tests_clone]
commands =
    bash -c "if [ ! -d "{toxinidir}/tests/common" ]; then \
               git clone https://git.openstack.org/openstack/openstack-ansible-tests {toxinidir}/tests/common; \
               pushd {toxinidir}/tests/common; \
                 git checkout {env:OSA_TEST_RELEASE:master}; \
               popd; \
             fi"


[testenv:pep8]
commands =
    {[testenv:tests_clone]commands}
    bash -c "{toxinidir}/tests/common/test-pep8.sh"


[flake8]
# Ignores the following rules due to how ansible modules work in general
#     F403 'from ansible.module_utils.basic import *' used;
#          unable to detect undefined names
ignore=F403,E731


[testenv:bashate]
# PURPOSE:
# This script executes bashate against all the files it find that match
# the search pattern. The search pattern is meant to find any shell
# scripts present in the role.
#
# The test ignores the following rules:
#
# E003: Indent not multiple of 4 (we prefer to use multiples of 2)
#
# E004: Skip adding a newline at the bottom of bash scripts
#
# E006: Line longer than 79 columns (as many scripts use jinja
#       templating, this is very difficult)
#
# E040: Syntax error determined using `bash -n` (as many scripts
#       use jinja templating, this will often fail and the syntax
#       error will be discovered in execution anyway)
commands =
    bash -c "grep --recursive --binary-files=without-match \
                  --files-with-match '^.!.*\(ba\)\?sh$' \
                  --exclude-dir .tox \
                  --exclude-dir .git \
                  --exclude-dir tests \
                  "{toxinidir}" | xargs bashate --error . --verbose --ignore=E003,E004,E006,E040"


[testenv:ansible]
deps =
    {[testenv]deps}
    -r{env:OSA_TEST_DEPS}
commands =
    bash -c "wget {env:OSA_ROLE_REQUIREMENTS} -O {toxinidir}/tests/common/osa-ansible-role-requirements.yml"
    ansible-galaxy install --role-file={toxinidir}/tests/common/osa-ansible-role-requirements.yml \
                           --roles-path={homedir}/.ansible/roles \
                           --force
    ansible-galaxy install --role-file={toxinidir}/ansible-role-{env:RPC_PRODUCT_RELEASE:pike}-requirements.yml \
                           --roles-path={homedir}/.ansible/roles \
                           --force


[testenv:ansible-syntax]
deps =
    {[testenv:ansible]deps}
commands =
    {[testenv:tests_clone]commands}
    {[testenv:ansible]commands}
    bash -c "{toxinidir}/tests/common/test-ansible-syntax.sh"


[testenv:ansible-lint]
deps =
    {[testenv:ansible]deps}
commands =
    {[testenv:tests_clone]commands}
    {[testenv:ansible]commands}
    bash -c "{toxinidir}/tests/common/test-ansible-lint.sh"


[testenv:linters]
deps =
    {[testenv:ansible]deps}
commands =
    {[testenv:tests_clone]commands}
    {[testenv:pep8]commands}
    {[testenv:bashate]commands}
    {[testenv:ansible-lint]commands}
    {[testenv:ansible-syntax]commands}
    {[testenv:docs]commands}
