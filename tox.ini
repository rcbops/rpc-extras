[tox]
minversion = 2.0
skipsdist = True
envlist = docs,linters,releasenotes,release-script
toxworkdir={env:TOX_WORK_DIR:.tox}


[testenv]
passenv = *
basepython = python2.7
whitelist_externals =
    bash
    sed
deps =
    -rtest-requirements.txt
    ansible{env:ANSIBLE_VERSION:==2.2.2}
    -e./hacking
setenv =
    WORKING_DIR={toxinidir}
    ANSIBLE_ACTION_PLUGINS = {homedir}/.ansible/roles/plugins/action
    ANSIBLE_CALLBACK_PLUGINS = {homedir}/.ansible/roles/plugins/callback
    ANSIBLE_FILTER_PLUGINS = {homedir}/.ansible/roles/plugins/filter
    ANSIBLE_LOOKUP_PLUGINS = {homedir}/.ansible/roles/plugins/lookup
    ANSIBLE_LIBRARY = {homedir}/.ansible/roles/plugins/library:{toxinidir}/rpcd/playbooks/library
    ANSIBLE_ROLES_PATH = {homedir}/.ansible/roles:{toxinidir}/rpcd/playbooks/roles:{toxinidir}/openstack-ansible/playbooks/roles


[testenv:releasenotes]
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html


[testenv:docs]
commands=
    python setup.py build_sphinx


# environment used by the -infra templated docs job
[testenv:venv]
deps = -r{toxinidir}/test-requirements.txt
commands = {posargs}


[testenv:tests_clone]
commands =
    bash -c "if [ ! -d "{toxinidir}/tests/common" ]; then \
               git clone https://git.openstack.org/openstack/openstack-ansible-tests {toxinidir}/tests/common; \
               pushd {toxinidir}/tests/common; \
                 git checkout {env:OSA_TESTS_CHECKOUT:master}; \
               popd; \
             fi"


[testenv:pep8]
commands =
    {[testenv:tests_clone]commands}
    bash -c "{toxinidir}/tests/common/test-pep8.sh"


[flake8]
# Ignores the following rules due to how ansible modules work in general
#     F403 'from ansible.module_utils.basic import *' used;
#          unable to detect undefined names
ignore=F403,E731
exclude=openstack-ansible/*,openstack-ansible-ops/*,f5-config.py


[testenv:bashate]
commands =
    {[testenv:tests_clone]commands}
    bash -c "{toxinidir}/tests/common/test-bashate.sh"


[testenv:ansible]
deps =
    {[testenv]deps}


[testenv:ansible-syntax]
deps =
    {[testenv:ansible]deps}
commands =
    {[testenv:tests_clone]commands}
    bash -c "{toxinidir}/tests/common/test-ansible-syntax.sh"


[testenv:ansible-lint]
deps =
    {[testenv:ansible]deps}
commands =
    {[testenv:tests_clone]commands}
    bash -c 'ansible-lint \
             --exclude {homedir}/.ansible/roles/ceph.ceph-common \
             --exclude {homedir}/.ansible/roles/rcbops_openstack-ops \
             $(find {toxinidir}/rpcd/playbooks/ -type f -name "*.yml" | grep -v maas | grep -v ceph) -vvv'


[testenv:linters]
deps =
    {[testenv:ansible]deps}
commands =
    {[testenv:tests_clone]commands}
    {[testenv:pep8]commands}
    {[testenv:bashate]commands}
    {[testenv:ansible-lint]commands}
    {[testenv:ansible-syntax]commands}
    {[testenv:docs]commands}


[testenv:release-script]
commands = python -m unittest discover -s scripts -p test_release.py -v
