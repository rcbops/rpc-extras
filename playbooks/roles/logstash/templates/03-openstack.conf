filter {
  #---------------------------------------------------------------------------
  # Parse & tag specific openstack project log messages
  if "openstack" in [tags] {
    #-----------------------------------------------------------------------
    # Parse & tag generic nova logs
    # i.e.:
    # 1) nova-api-os-compute.log: nova.osapi_compute.wsgi.server [-] (11093) accepted ('192.168.1.100', 53437)
    # 2) nova-compute.log: nova.compute.resource_tracker [-] Auditing locally available compute resources
    grok {
      match => ["openstack_function", "nova.%{GREEDYDATA:os_program_path}"]
      add_tag => [ "nova" ]
      tag_on_failure => []
    }
    #-----------------------------------------------------------------------
    # Parse & tag generic keystoneclient logs (as used by nova)
    # i.e.:
    # 1) nova-api-os-compute.log: keystonemiddleware.auth_token [-] Using /tmp/keystone-signing-FI3PTe as cache directory for signing certificate
    grok {
      match => ["openstack_function", "keystonemiddleware.%{GREEDYDATA:os_program_path}"]
      add_tag => [ "keystoneclient" ]
      tag_on_failure => []
    }
    #-----------------------------------------------------------------------
    # Parse & tag generic keystone logs
    # i.e.:
    # 1) keystone.log: keystone.common.controller [-] RBAC: Bypassing authorization
    # 2) keystone.log: keystone-all [-] Configuration options gathered from: log_opt_values /usr/lib/python2.7/dist-packages/oslo/config/cfg.py:1929
    grok {
      match => ["openstack_function", "keystone[.-]%{GREEDYDATA:os_program_path}"]
      add_tag => [ "keystone" ]
      tag_on_failure => []
    }
    #-----------------------------------------------------------------------
    # Parse & tag generic routes logs (as used by keystone & nova)
    # i.e.:
    # 1) keystone.log: routes.middleware [-] Initialized with method overriding = True, and path info altering = True __init__ /usr/lib/python2.7/dist-packages/routes/middleware.py:41
    # 2) keystone.log: routes.middleware [-] Matched GET /tenants __call__ /usr/lib/python2.7/dist-packages/routes/middleware.py:100
    grok {
      match => ["openstack_function", "routes[.-]%{GREEDYDATA:os_program_path}"]
      add_tag => [ "routes" ]
      tag_on_failure => []
    }
    #-----------------------------------------------------------------------
    # Parse & tag generic sqlalchemy logs (as used by keystone)
    # i.e.:
    # 1) keystone.log: 2014-06-10 13:41:24.789 18755 INFO sqlalchemy.engine.base.Engine [-] ('default',)
    grok {
      match => ["openstack_function", "sqlalchemy.%{GREEDYDATA:os_program_path}"]
      add_tag => [ "sqlalchemy" ]
      tag_on_failure => []
    }
    #-----------------------------------------------------------------------
    # Parse & tag generic cinder logs
    # i.e.:
    # 1) cinder.log: 2014-06-11 16:00:30.546 4131 INFO cinder.api.openstack.wsgi [-] http://10.127.26.62:8776/ returned with HTTP 200
    # 2) cinder.log: 2015-01-07 17:44:17.490 789 INFO eventlet.wsgi.server [-] 172.29.236.100 - - [07/Jan/2015 17:44:17] "OPTIONS / HTTP/1.0" 200 428 0.001507
    grok {
      match => ["openstack_function", "cinder.%{GREEDYDATA:os_program_path}"]
      add_tag => [ "cinder" ]
      tag_on_failure => []
    }
    if [os_program] =~ /cinder/ and "cinder" not in [tags] {
      mutate {
        add_tag => [ "cinder" ]
        add_field => {
          "os_program_path" => "%{openstack_function}"
        }
      }
    }
    #-----------------------------------------------------------------------
    # Parse & tag generic neutron logs
    # i.e.:
    # 1) neutron.log: 2014-06-11 16:00:30.546 4131 INFO cinder.api.openstack.wsgi [-] http://10.127.26.62:8776/ returned with HTTP 200
    grok {
      match => ["openstack_function", "neutron.%{GREEDYDATA:os_program_path}"]
      add_tag => [ "neutron" ]
      tag_on_failure => []
    }
    #-----------------------------------------------------------------------
    # Parse & tag generic glance logs
    grok {
      match => ["openstack_function", "glance.%{GREEDYDATA:os_program_path}"]
      add_tag => [ "glance" ]
      tag_on_failure => []
    }
    #-----------------------------------------------------------------------
    # Parse & tag generic heat logs
    grok {
      match => ["openstack_function", "heat.%{GREEDYDATA:os_program_path}"]
      add_tag => [ "heat" ]
      tag_on_failure => []
    }
  }
}
