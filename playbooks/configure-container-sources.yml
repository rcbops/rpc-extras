---
# Copyright 2017, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Configure the default container sources for RPC-O
  hosts: localhost
  environment: "{{ deployment_environment_variables | default({}) }}"
  connection: local
  user: root
  gather_facts: true
  pre_tasks:
    - name: Ensure local facts directory exists
      file:
        dest: "/etc/ansible/facts.d"
        state: directory
        group: "root"
        owner: "root"
        mode:  "0755"
        recurse: no

    - name: initialize local facts
      ini_file:
        dest: "/etc/ansible/facts.d/rpc_openstack.fact"
        section: "rpc_artifacts"
        option: initialized
        value: true

    - name: Refresh local facts
      setup:
        filter: ansible_local
        gather_subset: "!all"
      tags:
        - always

    - name: Set the rpc-openstack variables
      set_fact:
        rpc_openstack: "{{ ansible_local['rpc_openstack']['rpc_artifacts'] }}"

    - name: Set the rpc-artifact variables
      set_fact:
        container_artifact_enabled: "{{ rpc_openstack['container_artifact_enabled'] }}"
      when:
        - rpc_openstack['container_artifact_enabled'] is defined
        - container_artifact_enabled is undefined

    - name: Check for artifacts
      uri:
        url: "{{ rpco_mirror_base_url }}/meta/1.0/index-system"
        method: GET
        return_content: true
      failed_when: false
      register: check_artifacts

    - name: Set artifacts enabled
      set_fact:
        container_artifact_found: "{{ check_artifacts.content is search(container_search_string) }}"

    - name: Set artifacts enabled
      set_fact:
        container_artifact_enabled: "{{ container_artifact_found | bool }}"
      when:
        - container_artifact_enabled is undefined

    - name: Check if artifacts are enabled but not found
      fail:
        msg: |
          The container artifacts are enabled but not found. The deployment has
          halted. Please check the artifacts repository is online and available
          before continuing.
      when:
        - container_artifact_enabled | bool
        - not container_artifact_found | bool
      tags:
        - always

  tasks:
    - name: Sync artifact files (all)
      copy:
        src: "{{ item }}"
        dest: "/etc/openstack_deploy/group_vars/all/{{ item | basename }}"
      with_items:
        - files/lxc.yml
      when:
        - container_artifact_found | bool
        - container_artifact_enabled | bool

    - name: Sync artifact files
      copy:
        src: "{{ item }}"
        dest: "/etc/openstack_deploy/group_vars/{{ item | basename }}"
      with_items:
        - "files/cinder_all.yml"
        - "files/glance_all.yml"
        - "files/heat_all.yml"
        - "files/horizon_all.yml"
        - "files/ironic_all.yml"
        - "files/keystone_all.yml"
        - "files/kibana_all.yml"
        - "files/logstash_all.yml"
        - "files/memcached_all.yml"
        - "files/neutron_all.yml"
        - "files/nova_all.yml"
        - "files/repo_all.yml"
        - "files/rsyslog_all.yml"
        - "files/swift_all.yml"
        - "files/utility_all.yml"
      when:
        - container_artifact_found | bool
        - container_artifact_enabled | bool

  post_tasks:
    - name: Set artifact local fact
      ini_file:
        dest: "/etc/ansible/facts.d/rpc_openstack.fact"
        section: "rpc_artifacts"
        option: "{{ item.option }}"
        value: "{{ item.value }}"
      with_items:
        - { option: "container_artifact_enabled", value: "{{ container_artifact_enabled }}" }
        - { option: "container_artifact_found", value: "{{ container_artifact_found }}" }

  vars:
    ansible_python_interpreter: "/usr/bin/python"
    container_search_string: ".*{{ ansible_distribution_release }};.*{{ rpc_release }};"

  tags:
    - rpc
