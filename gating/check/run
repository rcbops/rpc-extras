#!/bin/bash

## Shell Opts ----------------------------------------------------------------

set -eux
set -o pipefail

## Display environment
echo "+-------------------- ENV VARS --------------------+"
env
echo "+-------------------- ENV VARS --------------------+"

## Vars ----------------------------------------------------------------------

export DEPLOY_AIO="true"

source "$(readlink -f $(dirname ${0}))/../gating_vars.sh"

## Main ----------------------------------------------------------------------

echo "rpc-openstack at SHA $(git rev-parse HEAD)"

if [[ ${RE_JOB_ACTION} == "tox-test" ]]; then

  tmp_tox_dir=$(mktemp -d)
  tox -e ${RE_JOB_SCENARIO} --workdir $tmp_tox_dir

elif [[ ${RE_JOB_IMAGE} =~ .*mnaio.* ]]; then
  bash -c "$(readlink -f $(dirname ${0})/run_deploy_mnaio.sh)"
else
  bash -c "$(readlink -f $(dirname ${0})/../../scripts/deploy.sh)"

  # Enable the debug stdout callback to ensure that the console
  # output is easily legible
  export ANSIBLE_STDOUT_CALLBACK=debug
  # Verify that there are no haproxy backends down
  cd /opt/openstack-ansible/playbooks/
  openstack-ansible -v /opt/rpc-openstack/gating/thaw/haproxycheck.yml
fi

if [[ ${RE_JOB_ACTION} == system* ]]; then
  bash -c "$(readlink -f $(dirname ${0})/run_system_tests.sh)"
fi

if [[ ${RE_JOB_ACTION} == "sdqc" ]]; then
  export RE_JOB_BRANCH="openstack-ops-only"
  bash -c "$(readlink -f $(dirname ${0})/run_system_tests.sh)"
fi

if [[ ${RE_JOB_ACTION} == "elk" ]]; then
  bash -c "$(readlink -f $(dirname ${0})/run_elk_tests.sh)"
fi

if [[ ${RE_JOB_ACTION} == "health_check" ]]; then
  bash -c "$(readlink -f $(dirname ${0})/run_health_check_tests.sh)"
fi
