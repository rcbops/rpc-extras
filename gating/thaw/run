#!/bin/bash -xeu

# Thaw Script

# This script is executed when an instance is created from a snapshot of
# an RPCO deployment. It should fix things that are broken by the switch
# to a difference instance (eg IPs, hostname)

ORIG_IP=$(
  cat /etc/openstack_deploy/openstack_user_config.yml | \
  awk '/external_lb_vip_address/{print $2}' | sed -e 's/[ "]//g'
)

# Need to ensure SSH config is ok before running ansible
mkdir -p /root/.ssh
cat /opt/root_ssh_backup/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys
cat /opt/root_ssh_backup/.ssh/authorized_keys >> /root/.ssh/authorized_keys
cp /opt/root_ssh_backup/.ssh/id_rsa /root/.ssh
cp /opt/root_ssh_backup/.ssh/id_rsa.pub /root/.ssh
cp /opt/root_ssh_backup/.ssh/known_hosts /root/.ssh ||:
ssh-keyscan localhost >> /root/.ssh/known_hosts

# Re-populate /etc/hosts file with container data
/usr/local/bin/openstack-host-hostfile-setup.sh

cd /opt/openstack-ansible/playbooks/

# Enable the debug stdout callback to ensure that the console
# output is easily legible
export ANSIBLE_STDOUT_CALLBACK=debug

# Use implicit fact gathering to ensure the fact cache is ignored,
# and facts are always gathered. This important we rely on the public
# IP fact being up to date.
export ANSIBLE_GATHERING=implicit
openstack-ansible -v /opt/rpc-openstack/gating/thaw/thaw.yml
openstack-ansible -t haproxy-server haproxy-install.yml

lxc-autostart --all

openstack-ansible -v /opt/rpc-openstack/gating/thaw/haproxycheck.yml
openstack-ansible -v /opt/rpc-openstack/gating/thaw/fix_endpoints.yml -e orig_ip=${ORIG_IP}

# Remove the /gating directory to prevent any further snapshots from being
# taken.
if [[ -d "/gating" ]]; then
    rm -rf /gating
fi
