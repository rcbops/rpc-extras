---
- name: Dynamic inclusion of container
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
    - container-vars.yml
  vars:
    image_name: "{{ lookup('env', 'CONTAINER_TYPE') | default('keystone', True) }}"
  tasks:
    - name: prepare group for integrity checking
      add_host:
        name: "/tmp/{{ image_name }}/"
        groups: "lxc_container_artifact"
        container_name: "LXC_NAME"
        physical_host: "localhost"
      changed_when: false

- name: Check integrity
  hosts: lxc_container_artifact
  connection: chroot
  # Gether facts is necessary
  vars_files:
    - container-vars.yml
  vars:
    image_name: "{{ lookup('env', 'CONTAINER_TYPE') | default('keystone', True) }}"
  tasks:
    - name: Fetch get-pip for comparison
      get_url:
        url: "{{ rpco_mirror_base_url }}/os-releases/{{ rpc_release }}/get-pip.py"
        dest: /opt/get-pip.py
        force: yes #Ensure it's redownloaded for testing purposes, not directly ok.
    - name: Find active deb sources that don't contain a clear "trusty " string (like trusty-updates)
      shell: find /etc/apt -type f -name "*.list" -exec grep "^deb " {} \; | grep -v "trusty "
      failed_when: matching_files.rc == 0
      changed_when: false
      register: matching_files
    - debug:
        var: matching_files
    # TODO(evrardjp): Refactor this to avoid being on the same codepath as the building.
    - name: Fetch venv from pre-build venv artifact for comparison
      get_url:
        url: "{{ role_vars.venv_download_url }}"
        dest: "/var/cache/{{ role_vars.venv_download_url | basename }}"
        force: yes #Ensure it's redownloaded
        checksum: "sha1:{{ lookup('url', role_vars.venv_download_url  | replace('tgz', 'checksum')) }}"
