---
# Copyright 2016-2017, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# MAAS
# Set maas_auth_method to 'token' to use maas_auth_token/maas_api_url
# instead of maas_username/maas_api_key
maas_auth_method: password
maas_tenant_id: "{{ rackspace_cloud_tenant_id | default('') }}"
maas_username: "{{ rackspace_cloud_username | default('') }}"
maas_api_key: "{{ rackspace_cloud_api_key | default('') }}"
maas_auth_token: "{{ rackspace_cloud_auth_token | default('') }}"
maas_notification_plan: npManaged

# Set the maas_scheme
# Note: (alextricity25) This has been changed to https because
# SSL termination is done by default since Newton per https://review.openstack.org/#/c/277199/
maas_scheme: https

# Set whether checks should be enabled or disabled
maas_ssl_check: false
maas_host_check: false
maas_remote_check: true

# By default we will create an agent token for each entity, however if you'd
# prefer to use the same agent token for all entities then specify it here
#maas_agent_token: some_token
maas_target_alias: public0_v4

# Enable/Disable the cinder-backup monitor
maas_monitor_cinder_backup: "{{ cinder_service_backup_program_enabled | default(false) }}"

# MaaS pathing and versions
maas_release: "1.7.2"
maas_venv: "/openstack/venvs/maas-{{ maas_release }}"
maas_venv_bin: "{{ maas_venv }}/bin"

# Allow all of the host machiens running maas agents to restart once at the end of a maas playbook.
maas_restart_independent: false

# Apt artifact repo configuration
# The rest of the apt artifact repo configuration is held in
# group_vars/all/apt.yml but due to the way that the rpc-maas
# implementation is done we cannot use group_vars to override
# the defaults, so we have to use extra-vars.
# TODO(odyssey4me):
# Refactor the rpc-maas implementation to make use of roles
# to implement the base repo/software so that these settings
# can be implemented in group_vars instead of extra-vars.

# MAAS
# The MAAS apt repo cannot be included in the integrated apt repository
# due to the fact that the same package name/version is used for multiple
# distributions, but the content and checksums are different.
maas_repos:
  repo: "deb {{ rpco_mirror_base_url }}/apt-mirror/independant/rax-maas-{{ ansible_distribution_release }}/ {{ rpc_release }}-{{ ansible_distribution_release }} main"
  state: "present"
  filename: "rax-maas"

maas_keys:
  hash_id:  "{{ rpco_gpg_key_id }}"
  url: "{{ rpco_gpg_key_location }}{{ rpco_gpg_key_name }}"
  state: "present"

# Influxdata
maas_influxdata_repo:
  url: "{{ rpco_mirror_apt_deb_line }}"
  filename: "{{ rpco_mirror_apt_filename }}"

maas_influxdata_key:
  id:  "{{ rpco_gpg_key_id }}"
  url: "{{ rpco_gpg_key_location }}{{ rpco_gpg_key_name }}"

# Grafana
maas_grafana_repo:
  url: "{{ rpco_mirror_apt_deb_line }}"
  filename: "{{ rpco_mirror_apt_filename }}"

maas_grafana_key:
  id:  "{{ rpco_gpg_key_id }}"
  url: "{{ rpco_gpg_key_location }}{{ rpco_gpg_key_name }}"

