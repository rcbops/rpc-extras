# ======================================================
# reference.json.config
# ------------------------------------------------------
# This configuration is specifically a reference
# implementation for a configuration file.
# You must create a proper configuration file and supply
# the correct values for your Environment(s)
#
# For multiple environments it is suggested that you
# generate specific configurations and name the files
# <ENVIRONMENT>.<FORMAT>.config
# ======================================================

[token_api]
serialize_format=json
deserialize_format=json
version=v2.0
username={{ keystone_admin_user_name }}
tenant_name={{ keystone_admin_tenant_name }}
password={{ keystone_auth_admin_password }}
authentication_endpoint={{ keystone_service_internalurl }}

[objectstorage]
identity_service_name=keystone
region=RegionOne

[objectstorage_api]
# API Settings for ObjectStorage.
#
# Max container list length of a account listing.
# account_listing_limit =
#
# String to be prepended to created container names.
# In general most containers will be created using this convention,
# but there may be some test cases which warrant ignoring this value.
# base_container_name =
#
# The max number of objects bulk delete can delete.
# bulk_delete_max_count = 1000
#
# Max object count for a container listing.
# container_listing_limit = 10000
#
# Default object count returned for a container listing.
# containers_listing_default_count =
#
# In addition to setting the features, you can also exclude features from
# being reported.  If for example you have the following:
# features=foo bar
# excluded_features=foo
# This will have the same efect as the following:
# features=bar
#
# By default, no excluded features are set.
# excluded_features =
#
# Tests can be tagged with a decorator as follows:
# @ObjectStorageFixture.required_features('feature1', 'feature2')
# These tagged tests, will only be run if all of the features listed have
# been added to the features key.  If use_swift_info is true, features
# will be pulled from the swift info and added to the features defined
# here.
# The features are defined by adding them to a whitespace separated list
# as follows:
# features=foo bar ...
# The following special values can also be set:
# __ALL__  - runs all tests tagged with required_features,
# regardless of the features listed in the decorator.
# __NONE__ - runs no tests tagged with required_features, regardless
# of the features listed in the decorator.
# by defaut, no features are added.
# features =
#
# The amount of time that keys for formpost are cached.
# formpost_key_cache_time = 0
#
# The admin key for admin /info calls.
# info_admin_key =
#
# The timeout in seconds to stop retrying container/object listings
# and instead report an error.
# list_timeout = 120
#
# Max container name length in bytes.
# max_container_name_len = 256
#
# Maximum number of bytes allowed for combined container/object
# metadata.
# max_metadata_overall_size = 4096
#
# Maximum length in bytes for a object name.
# max_object_name_len = 1024
#
# Maximum object size in bytes.
# max_object_size = 5368709122
#
# Maximum length in bytes allowed for metadata names.
# This does not include the bytes needed for the 'X-Container-Meta-' and
# 'X-Object-Meta-' portion of header used to set metadata.
# metadata_name_max_len = 128
#
# Maximum length in bytes allowed for metadata values.
# metadata_value_max_len = 256
#
# The smallest size in bytes of a non-terminal static large object
# segment.
# min_slo_segment_size = 1048576
#
# Interval in seconds that the object expirer is expected to run
# and complete.
# object_expirer_run_interval = 60
#
# Maximum number of distinct metadata items.
# object_metadata_max_count = 90
#
# If set to False, CORS will opperate in the 'old' way, otherwise
# CORS works more strictly according to the spec.
# strict_cors_mode = True
#
# The amount of time that keys for tempurl are cached.
# tempurl_key_cache_time = 0
#
# If True, tells CloudCafe to make a call to swift's /info resource
# to determine the features available.  If false, all features must
# be provided via the config.
use_swift_info = True
#
# Specify the version of swift running allowing tests tagged with the
# required_version decorator to skip tests based on version rules.
# This version is to be used if provided, even if a different version
# is returned from a /info call.
# version =
#
