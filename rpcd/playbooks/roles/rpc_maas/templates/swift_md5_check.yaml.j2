{% set label = "swift_md5_check" %}
{% set check_name = label+'--'+ansible_hostname %}
type        : agent.plugin
label       : "{{ check_name }}"
period      : "{{ maas_check_period_override[label] | default(maas_check_period) }}"
timeout     : "{{ maas_check_timeout_override[label] | default(maas_check_timeout) }}"
disabled    : "{{ (check_name | match(maas_excluded_checks_regex)) | ternary('true', 'false') }}"
details     :
    file    : swift-recon.py
    args    : ["md5"]
alarms      :
    swift_ring_md5_check :
        label                   : swift_ring_md5_check--{{ ansible_hostname }}
        notification_plan_id    : "{{ maas_notification_plan }}"
        disabled                : {{ (('swift_ring_md5_check--'+ansible_hostname) | match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (metric["ring_errors"] > 0) {
                return new AlarmStatus(CRITICAL, "Ring md5sum Inconsistent");
            }

    swift_conf_md5_check :
        label                   : swift_conf_md5_check--{{ ansible_hostname }}
        notification_plan_id    : "{{ maas_notification_plan }}"
        disabled                : {{ (('swift_conf_md5_check--'+ansible_hostname) | match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (metric["swift_conf_errors"] > 0) {
                return new AlarmStatus(CRITICAL, "Swift conf md5sum Inconsistent");
            }
