type: agent.plugin
label: "swift_quarantine_check--{{ ansible_hostname }}"
disabled    : false
period      : "{{ maas_check_period }}"
timeout     : "{{ maas_check_timeout }}"
details     :
    file    : run_plugin_in_venv.sh
    args    : ["{{ maas_plugin_dir }}swift-recon.py", "quarantine"]
alarms      :
    swift_quarantine_object_failed :
        label                   : swift_quarantine_object_failed--{{ ansible_hostname }}
        notification_plan_id    : "{{ maas_notification_plan }}"
        disabled                : {{ (('swift_quarantine_object_failed--'+ansible_hostname )| match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (metric["objects_failed"] > {{ swift_object_quarantine_failed_percentage_threshold }}) {
                return new AlarmStatus(CRITICAL, "Swift Object Quarantine Percentage Above Threshold");
            }

    swift_quarantine_object_avg :
        label                   : swift_quarantine_object_avg--{{ ansible_hostname }}
        notification_plan_id    : "{{ maas_notification_plan }}"
        disabled                : {{ (('swift_quarantine_object_avg--'+ansible_hostname) | match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (metric["objects_avg"] > {{ swift_object_quarantine_average_threshold }}) {
                return new AlarmStatus(CRITICAL, "Swift Object Quarantine Average Above Threshold");
            }

    swift_quarantine_account_failed :
        label                   : swift_quarantine_account_failed--{{ ansible_hostname }}
        notification_plan_id    : "{{ maas_notification_plan }}"
        disabled                : {{ (('swift_quarantine_account_failed--'+ansible_hostname) | match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (metric["accounts_failed"] > {{ swift_account_quarantine_failed_percentage_threshold }}) {
                return new AlarmStatus(CRITICAL, "Swift Account Quarantine Percentage Above Threshold");
            }

    swift_quarantine_account_avg :
        label                   : swift_quarantine_account_avg--{{ ansible_hostname }}
        notification_plan_id    : "{{ maas_notification_plan }}"
        disabled                : {{ (('swift_quarantine_account_avg--'+ansible_hostname) | match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (metric["accounts_avg"] > {{ swift_account_quarantine_average_threshold }}) {
                return new AlarmStatus(CRITICAL, "Swift Account Quarantine Average Above Threshold");
            }

    swift_quarantine_container_failed :
        label                   : swift_quarantine_container_failed--{{ ansible_hostname }}
        notification_plan_id    : "{{ maas_notification_plan }}"
        disabled                : {{ (('swift_quarantine_container_failed--'+ansible_hostname) | match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (metric["containers_failed"] > {{ swift_container_quarantine_failed_percentage_threshold }}) {
                return new AlarmStatus(CRITICAL, "Swift Container Quarantine Percentage Above Threshold");
            }

    swift_quarantine_container_avg :
        label                   : swift_quarantine_container_avg--{{ ansible_hostname }}
        notification_plan_id    : "{{ maas_notification_plan }}"
        disabled                : {{ (('swift_quarantine_container_avg--'+ansible_hostname) | match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (metric["containers_avg"] > {{ swift_container_quarantine_average_threshold }}) {
                return new AlarmStatus(CRITICAL, "Swift Container Quarantine Average Above Threshold");
            }
