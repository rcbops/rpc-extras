type: agent.plugin
label: "memcached_status--{{ ansible_hostname }}"
disabled    : false
period      : "{{ maas_check_period }}"
timeout     : "{{ maas_check_timeout }}"
details     :
    file    : run_plugin_in_venv.sh
    args    : ["{{ maas_plugin_dir }}memcached_status.py", "{{ ansible_ssh_host }}"]
alarms      :
    memcache_api_local_status :
        label                   : memcache_api_local_status--{{ ansible_hostname }}
        notification_plan_id    : "{{ maas_notification_plan }}"
        disabled                : {{ (('memcache_api_local_status--'+ansible_hostname) | match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (metric["memcache_api_local_status"] != 1) {
                return new AlarmStatus(CRITICAL, "memcache unavailable");
            }
    memcache_curr_connections :
        label                   : memcache_curr_connections--{{ ansible_hostname }}
        notification_plan_id    : "{{ maas_notification_plan }}"
        disabled                : {{ (('memcache_curr_connections--'+ansible_hostname) | match(maas_excluded_alarms_regex)) | ternary('true', 'false') }}
        criteria                : |
            :set consecutiveCount={{ maas_alarm_local_consecutive_count }}
            if (metric["memcache_curr_connections"] > {{ ((memcached_connections*0.9)|round|int) }}) {
                return new AlarmStatus(CRITICAL, "memcached connection count is >= 90% of max");
            }
            if (metric["memcache_curr_connections"] > {{ ((memcached_connections*0.8)|round|int) }}) {
                return new AlarmStatus(WARNING, "memcached connection count is >= 80% of max");
            }
